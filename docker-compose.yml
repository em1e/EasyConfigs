services:
  easyconfigs:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      args:
        NODE_VERSION: 20
        PNPM_VERSION: 9.12.3
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  easyconfigs-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "4000:4000"
      - "5555:5555"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=${DATABASE_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - RESEND_API_KEY=${RESEND_API_KEY}
      - FROM_EMAIL=${FROM_EMAIL}
      - DEV_AUTO_VERIFY_EMAIL=${DEV_AUTO_VERIFY_EMAIL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_ID=${GITHUB_ID}
      - GITHUB_SECRET=${GITHUB_SECRET}
    env_file:
      - .env
    command: pnpm --filter=easyconfigs dev
    profiles:
      - dev

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - easyconfigs
    restart: unless-stopped
    profiles:
      - with-proxy

  # redis:
  #   image: redis:alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   profiles:
  #     - dev
  #     - with-db

volumes:
  redis_data:
